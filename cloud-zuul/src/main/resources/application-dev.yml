server:
  port: 8080

spring:
  application:
    name: cloud-zuul
  cloud:
    loadbalancer:
      retry:
        enabled: true #开启负载均衡的重试机制

#更改Eureka更新频率将打破服务器的自我保护功能,即可以剔除不可用实例
#开启健康检查
#eureka:
#  client:
#    healthcheck:
#      enabled: true
##租期更新时间间隔
#eureka:
#  instance:
#    lease-renewal-interval-in-seconds: 30
##租期到期时间
#    lease-expiration-duration-in-seconds: 90

eureka:
  instance:
    #向eureka服务注册时，使用ip地址
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
  client:
    service-url:
      defaultZone: http://localhost:9050/eureka/

#设置超时时间，防止超时
zuul:
  #添加网管
  add-host-header: true
  host:
    socket-timeout-millis: 30000
    connect-timeout-millis: 30000
  retryable: true #zuul重试机制

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 60000 #断路器的超时时间需大于ribbon的超时时间，不然不会触发重试

ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000
  OkToRetryOnAllOperations: true
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 1